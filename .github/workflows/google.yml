name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'main'

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    env:
      PROJECT_ID: 'neat-striker-455607-i3'
      GAR_LOCATION: 'asia-southeast2'
      REPOSITORY: 'noteus-repo'
      WORKLOAD_IDENTITY_PROVIDER: 'projects/669663908735/locations/global/workloadIdentityPools/github-action-pool/providers/github'
      SERVICE_ACCOUNT: 'github-wif@neat-striker-455607-i3.iam.gserviceaccount.com'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout Code'
        uses: 'actions/checkout@v4'

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ env.SERVICE_ACCOUNT }}'

      - name: 'Configure Docker for Artifact Registry'
        run: |
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: 'Build and Push Docker Images'
        run: |
          # Set image tags
          export FRONTEND_TAG="$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/noteus-frontend:latest"
          export DATABASE_TAG="$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/noteus-database:latest"
          export API_TAG="$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/noteus-api:latest"

    # Common ENV string
          ENV_VARS=$(cat <<EOF
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
          GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
          MONGO_URI=${{ secrets.MONGO_URI }}
          MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}
          MONGO_COLLECTION_NAME=${{ secrets.MONGO_COLLECTION_NAME }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          ZILLIZ_CLOUD_URI=${{ secrets.ZILLIZ_CLOUD_URI }}
          ZILLIZ_CLOUD_TOKEN=${{ secrets.ZILLIZ_CLOUD_TOKEN }}
          LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }}
          LANGCHAIN_ENDPOINT=${{ secrets.LANGCHAIN_ENDPOINT }}
          USER_AGENT=${{ secrets.USER_AGENT }}
          HUGGINGFACE_TOKEN=${{ secrets.HUGGINGFACE_TOKEN }}
          NEXT_PUBLIC_APP_URL=${{ vars.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_BACKEND_API_URL=${{ vars.NEXT_PUBLIC_BACKEND_API_URL }}
          NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
          NEXT_PUBLIC_BACKEND_DB_URL=${{ vars.NEXT_PUBLIC_BACKEND_DB_URL }}
          FRONTEND_API_URL=${{ vars.FRONTEND_API_URL }}
          PORT_BACKEND=${{ vars.PORT_BACKEND }}
          EOF
          )

          Function to write env file
          write_env_file() {
            local path=$1
            local filename=$2
            echo "Writing $filename for $path"
            echo "$ENV_VARS" > "$path/$filename"
          }

          write_env_file "front-end" ".env.local"
          write_env_file "api" ".env"
          write_env_file "database" ".env"

          echo "Building and pushing Frontend..."
          docker build -f front-end/Dockerfile -t $FRONTEND_TAG front-end/
          docker push $FRONTEND_TAG

          echo "Building and pushing Database..."
          docker build -f database/Dockerfile -t $DATABASE_TAG database/
          docker push $DATABASE_TAG

          echo "Building and pushing API..."
          docker build -f api/Dockerfile -t $API_TAG api/
          docker push $API_TAG

      - id: 'deploy-frontend'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'noteus-frontend'
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/noteus-frontend:latest'
          region: '${{ env.GAR_LOCATION }}'
          env_vars: |-
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}
            MONGO_COLLECTION_NAME=${{ secrets.MONGO_COLLECTION_NAME }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            ZILLIZ_CLOUD_URI=${{ secrets.ZILLIZ_CLOUD_URI }}
            ZILLIZ_CLOUD_TOKEN=${{ secrets.ZILLIZ_CLOUD_TOKEN }}
            LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }}
            LANGCHAIN_ENDPOINT=${{ secrets.LANGCHAIN_ENDPOINT }}
            USER_AGENT=${{ secrets.USER_AGENT }}
            HUGGINGFACE_TOKEN=${{ secrets.HUGGINGFACE_TOKEN }}
            NEXT_PUBLIC_APP_URL=${{ vars.NEXT_PUBLIC_APP_URL }}
            NEXT_PUBLIC_BACKEND_API_URL=${{ vars.NEXT_PUBLIC_BACKEND_API_URL }}
            NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
            NEXT_PUBLIC_BACKEND_DB_URL=${{ vars.NEXT_PUBLIC_BACKEND_DB_URL }}
            FRONTEND_API_URL=${{ vars.FRONTEND_API_URL }}
            PORT_BACKEND=${{ vars.PORT_BACKEND }}
          flags: >
            --allow-unauthenticated


      - id: deploy-api
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'noteus-api'
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/noteus-api:latest'
          region: '${{ env.GAR_LOCATION }}'
          memory: '8Gi'               # ⬅️ Up to 128Gi
          cpu: '4'                    # ⬅️ Up to 32 (if using Cloud Run max settings)
          max_instances: '3'          # Optional: limit how many can scale
          env_vars: |-
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}
            MONGO_COLLECTION_NAME=${{ secrets.MONGO_COLLECTION_NAME }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            ZILLIZ_CLOUD_URI=${{ secrets.ZILLIZ_CLOUD_URI }}
            ZILLIZ_CLOUD_TOKEN=${{ secrets.ZILLIZ_CLOUD_TOKEN }}
            LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }}
            LANGCHAIN_ENDPOINT=${{ secrets.LANGCHAIN_ENDPOINT }}
            USER_AGENT=${{ secrets.USER_AGENT }}
            HUGGINGFACE_TOKEN=${{ secrets.HUGGINGFACE_TOKEN }}
            NEXT_PUBLIC_APP_URL=${{ vars.NEXT_PUBLIC_APP_URL }}
            NEXT_PUBLIC_BACKEND_API_URL=${{ vars.NEXT_PUBLIC_BACKEND_API_URL }}
            NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
            NEXT_PUBLIC_BACKEND_DB_URL=${{ vars.NEXT_PUBLIC_BACKEND_DB_URL }}
            FRONTEND_API_URL=${{ vars.FRONTEND_API_URL }}
            PORT_BACKEND=${{ vars.PORT_BACKEND }}
          flags: >
            --memory=8Gi
            --port=8000
            --cpu=4
            --max-instances=3
            --concurrency=1
            --timeout=900s
            --allow-unauthenticated


      - id: deploy-database
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'noteus-database'
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/noteus-database:latest'
          region: '${{ env.GAR_LOCATION }}'
          allow_unauthenticated: true
          env_vars: |-
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}
            MONGO_COLLECTION_NAME=${{ secrets.MONGO_COLLECTION_NAME }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            ZILLIZ_CLOUD_URI=${{ secrets.ZILLIZ_CLOUD_URI }}
            ZILLIZ_CLOUD_TOKEN=${{ secrets.ZILLIZ_CLOUD_TOKEN }}
            LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }}
            LANGCHAIN_ENDPOINT=${{ secrets.LANGCHAIN_ENDPOINT }}
            USER_AGENT=${{ secrets.USER_AGENT }}
            HUGGINGFACE_TOKEN=${{ secrets.HUGGINGFACE_TOKEN }}
            NEXT_PUBLIC_APP_URL=${{ vars.NEXT_PUBLIC_APP_URL }}
            NEXT_PUBLIC_BACKEND_API_URL=${{ vars.NEXT_PUBLIC_BACKEND_API_URL }}
            NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
            NEXT_PUBLIC_BACKEND_DB_URL=${{ vars.NEXT_PUBLIC_BACKEND_DB_URL }}
            FRONTEND_API_URL=${{ vars.FRONTEND_API_URL }}
            PORT_BACKEND=${{ vars.PORT_BACKEND }}
          flags: >
            --port=5000
            --allow-unauthenticated

      - name: 'Hit deployed API endpoint'
        run: |
          echo "API URL: ${{ steps.deploy-api.outputs.url }}"
          curl "${{ steps.deploy-api.outputs.url }}"
