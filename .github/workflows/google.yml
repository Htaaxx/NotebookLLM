name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - 'main'

jobs:
  setup-build-publish-deploy:
    env:
      PROJECT_ID: 'neat-striker-455607-i3'  # TODO: update to your Google Cloud project ID
      GAR_LOCATION: 'asia-southeast2'  # TODO: update to your region
      GKE_CLUSTER: 'noteus-cluster'  # TODO: update to your cluster name
      GKE_ZONE: 'asia-southeast1-a'  # TODO: update to your cluster zone
      DEPLOYMENT_NAME_1: 'noteus-api'  # TODO: update to your deployment name
      DEPLOYMENT_NAME_2: 'noteus-frontend'  # TODO: update to your deployment name
      DEPLOYMENT_NAME_3: 'noteus-database'  # TODO: update to your deployment name
      REPOSITORY: 'noteus-repo'  # TODO: update to your Artifact Registry docker repository name
      WORKLOAD_IDENTITY_PROVIDER: 'projects/669663908735/locations/global/workloadIdentityPools/github-action-pool/providers/github'  # TODO: update to your workload identity provider

    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # Checkout the code from GitHub
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
        # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      # Authenticate to Google Cloud using Workload Identity Federation
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: 'github-wif@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'  # Ensure this outputs the correct token
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          
      # Build and push Docker containers for all three services
      - name: 'Build and push Docker containers'
        run: |-
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev
          export DOCKER_BUILDKIT=1
          export BUILDKIT_PROGRESS=plain
          FRONTEND_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/noteus-frontend:latest"
          DATABASE_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/noteus-database:latest"
          API_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/noteus-api:latest"
      
          # Set your build arguments
          echo "Building frontend container: $FRONTEND_TAG"
          docker build "${BUILD_ARGS[@]}" -f front-end/Dockerfile --tag "${FRONTEND_TAG}" front-end/
          docker push "${FRONTEND_TAG}"

          echo "Building database container: $DATABASE_TAG"
          docker build -f database/Dockerfile --tag "${DATABASE_TAG}" database/
          docker push "${DATABASE_TAG}"

          echo "Building API container: $API_TAG"
          docker build -f api/Dockerfile --tag "${API_TAG}" api/
          docker push "${API_TAG}"

      # Create Kubernetes Secret from GitHub secrets
      - name: 'Generate Cloud Run env.yaml'
        run: |
          cat <<EOF > env.yaml
          envs:
            - name: GOOGLE_CLIENT_ID
              value: "${{ secrets.GOOGLE_CLIENT_ID }}"
            - name: GOOGLE_CLIENT_SECRET
              value: "${{ secrets.GOOGLE_CLIENT_SECRET }}"
            - name: NEXTAUTH_SECRET
              value: "${{ secrets.NEXTAUTH_SECRET }}"
            - name: STRIPE_SECRET_KEY
              value: "${{ secrets.STRIPE_SECRET_KEY }}"
            - name: NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
              value: "${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}"
            - name: JWT_SECRET
              value: "${{ secrets.JWT_SECRET }}"
            - name: CLOUDINARY_CLOUD_NAME
              value: "${{ secrets.CLOUDINARY_CLOUD_NAME }}"
            - name: CLOUDINARY_API_KEY
              value: "${{ secrets.CLOUDINARY_API_KEY }}"
            - name: CLOUDINARY_API_SECRET
              value: "${{ secrets.CLOUDINARY_API_SECRET }}"
            - name: GOOGLE_API_KEY
              value: "${{ secrets.GOOGLE_API_KEY }}"
            - name: MONGO_URI
              value: "${{ secrets.MONGO_URI }}"
            - name: MONGO_DB_NAME
              value: "${{ secrets.MONGO_DB_NAME }}"
            - name: MONGO_COLLECTION_NAME
              value: "${{ secrets.MONGO_COLLECTION_NAME }}"
            - name: OPENAI_API_KEY
              value: "${{ secrets.OPENAI_API_KEY }}"
            - name: ZILLIZ_CLOUD_URI
              value: "${{ secrets.ZILLIZ_CLOUD_URI }}"
            - name: ZILLIZ_CLOUD_TOKEN
              value: "${{ secrets.ZILLIZ_CLOUD_TOKEN }}"
            - name: LANGCHAIN_API_KEY
              value: "${{ secrets.LANGCHAIN_API_KEY }}"
            - name: LANGCHAIN_ENDPOINT
              value: "${{ secrets.LANGCHAIN_ENDPOINT }}"
            - name: USER_AGENT
              value: "${{ secrets.USER_AGENT }}"
            - name: HUGGINGFACE_TOKEN
              value: "${{ secrets.HUGGINGFACE_TOKEN }}"
            - name: NEXT_PUBLIC_APP_URL
              value: "${{ vars.NEXT_PUBLIC_APP_URL }}"
            - name: NEXT_PUBLIC_BACKEND_API_URL
              value: "${{ vars.NEXT_PUBLIC_BACKEND_API_URL }}"
            - name: NEXTAUTH_URL
              value: "${{ vars.NEXTAUTH_URL }}"
            - name: NEXT_PUBLIC_BACKEND_DB_URL
              value: "${{ vars.NEXT_PUBLIC_BACKEND_DB_URL }}"
            - name: FRONTEND_API_URL
              value: "${{ vars.FRONTEND_API_URL }}"
            - name: PORT_BACKEND
              value: "${{ vars.PORT_BACKEND }}"
          EOF

      - name: 'Deploy Frontend to Cloud Run'
        run: |
          gcloud run deploy noteus-frontend \
            --image=${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/noteus-frontend:latest \
            --region=${GAR_LOCATION} \
            --platform=managed \
            --allow-unauthenticated \
            --env-vars-file=env.yaml

      - name: 'Deploy API to Cloud Run'
        run: |
          gcloud run deploy noteus-api \
            --image=${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/noteus-api:latest \
            --region=${GAR_LOCATION} \
            --platform=managed \
            --allow-unauthenticated \
            --env-vars-file=env.yaml

      - name: 'Deploy Database to Cloud Run'
        run: |
          gcloud run deploy noteus-database \
            --image=${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/noteus-database:latest \
            --region=${GAR_LOCATION} \
            --platform=managed \
            --allow-unauthenticated